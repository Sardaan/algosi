/*
Рассмотрим географическую карту с N странами, занумерованными от 1 до N (0 < N < 99).
 Для каждой страны известны номера соседних стран, т.е. имеющих общую границу с данной.
 Из каждой страны можно попасть в любую другую, перейдя некоторое количество границ.
 Напишите программу, которая определит, возможно ли покрасить карту только в два
 цвета — красный и синий — так, что если две страны имеют общую границу, их цвета
 различаются. Цвет первой страны — красный. Ваша программа должна вывести одну
 возможную раскраску для остальных стран или сообщить, что такая раскраска невозможна.

 Исходные данные
В первой строке записано число N. Из следующих N строк i-я строка содержит номера
 стран, с которыми i-я страна имеет границу. Каждое целое число в i-й строке больше,
 чем i, кроме последнего, которое равно 0 и обозначает конец списка соседей i-й страны.
 Если строка содержит 0, это значит, что i-я страна не соединена ни с одной страной с
 бoльшим номером.

 */

#include <iostream>
#include <vector>
#include <queue>

using namespace std;

vector<int> color(100, -1);
vector<int> edge[100];
int n;

void btf(int st) {
    queue<int> q;
    q.push(st);
    color[st] = 0;

    while (!q.empty()) {
        int v = q.front();
        q.pop();

        for (int i = 0; i < edge[v].size(); i++) {
            int to = edge[v][i];

            if (color[v] == color[to]) {
                cout << "-1";
                exit(0);
            }

            if (color[to] == -1) {
                color[to] = !color[v];
                q.push(to);
            }
        }
    }
}

int main(){
    cin >> n;

    for (int i = 0; i < n; i++) {
        int e = -1;
        while (e != 0) {
            cin >> e;

            if (e != 0) {
                edge[i].push_back(e - 1);
                edge[e - 1].push_back(i);
            }
        }
    }

    btf(0);

    for (int i = 0; i < n; i++){
        if (color[i] == -1) {
            btf(i);
        }
    }

    for (int i = 0; i < n; i++) {
        cout << color[i];
    }

    return 0;
}